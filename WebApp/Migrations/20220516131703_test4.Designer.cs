// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApp.Data;

#nullable disable

namespace WebApp.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220516131703_test4")]
    partial class test4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApp.Model.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1L,
                            CategoryName = "Torty"
                        },
                        new
                        {
                            CategoryId = 2L,
                            CategoryName = "Ciasta"
                        },
                        new
                        {
                            CategoryId = 3L,
                            CategoryName = "Ciastka"
                        },
                        new
                        {
                            CategoryId = 4L,
                            CategoryName = "Cukierki"
                        },
                        new
                        {
                            CategoryId = 5L,
                            CategoryName = "Lody"
                        });
                });

            modelBuilder.Entity("WebApp.Model.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OrderId"));

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("OrderValue")
                        .HasColumnType("numeric");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = 1L,
                            CustomerEmail = "piotrek3201@onet.pl",
                            CustomerName = "Piotr Kałuziński",
                            CustomerPhone = "+48501171851",
                            Date = new DateTime(2022, 5, 16, 15, 17, 3, 506, DateTimeKind.Local).AddTicks(2535),
                            OrderValue = 50m
                        },
                        new
                        {
                            OrderId = 2L,
                            CustomerEmail = "jan.kowalski@gmail.com",
                            CustomerName = "Jan Kowalski",
                            CustomerPhone = "+48501355704",
                            Date = new DateTime(2022, 5, 16, 15, 17, 3, 506, DateTimeKind.Local).AddTicks(2539),
                            OrderValue = 20m
                        });
                });

            modelBuilder.Entity("WebApp.Model.OrderDetail", b =>
                {
                    b.Property<long>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("OrderDetailId"));

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<double>("Quantity")
                        .HasColumnType("double precision");

                    b.HasKey("OrderDetailId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            OrderDetailId = 1L,
                            OrderId = 1L,
                            Price = 8.5m,
                            ProductId = 1L,
                            Quantity = 0.5
                        },
                        new
                        {
                            OrderDetailId = 2L,
                            OrderId = 1L,
                            Price = 40m,
                            ProductId = 3L,
                            Quantity = 2.0
                        },
                        new
                        {
                            OrderDetailId = 3L,
                            OrderId = 2L,
                            Price = 15m,
                            ProductId = 4L,
                            Quantity = 1.0
                        },
                        new
                        {
                            OrderDetailId = 4L,
                            OrderId = 2L,
                            Price = 4.75m,
                            ProductId = 2L,
                            Quantity = 0.25
                        });
                });

            modelBuilder.Entity("WebApp.Model.Product", b =>
                {
                    b.Property<long>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("ProductId"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsByWeight")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsCustomizable")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1L,
                            CategoryId = 1L,
                            Description = "Sam skomponuj swój wymarzony tort!",
                            ImageUrl = "",
                            IsByWeight = false,
                            IsCustomizable = true,
                            Name = "Tort własny",
                            Price = 50m
                        },
                        new
                        {
                            ProductId = 2L,
                            CategoryId = 2L,
                            Description = "Pyszne czekoladowe ciasto, lepsze niż we Władysławowie!",
                            ImageUrl = "",
                            IsByWeight = false,
                            IsCustomizable = false,
                            Name = "Brownie",
                            Price = 20m
                        },
                        new
                        {
                            ProductId = 3L,
                            CategoryId = 4L,
                            Description = "Klasyczne ciasto ze świeżymi jabłkami",
                            ImageUrl = "",
                            IsByWeight = false,
                            IsCustomizable = false,
                            Name = "Szarlotka",
                            Price = 15m
                        },
                        new
                        {
                            ProductId = 4L,
                            CategoryId = 4L,
                            Description = "Kultowe karmelki",
                            ImageUrl = "",
                            IsByWeight = true,
                            IsCustomizable = false,
                            Name = "Kukułki",
                            Price = 17m
                        });
                });

            modelBuilder.Entity("WebApp.Model.OrderDetail", b =>
                {
                    b.HasOne("WebApp.Model.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApp.Model.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WebApp.Model.Product", b =>
                {
                    b.HasOne("WebApp.Model.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WebApp.Model.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebApp.Model.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("WebApp.Model.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
